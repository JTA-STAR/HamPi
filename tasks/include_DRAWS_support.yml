#
# Copyright 2020 - 2023, Dave Slotter (W3DJS). All rights reserved.
#

- name: Install support for DRAWS
  hosts: all
  gather_facts: no
  environment:
    # Build-Time Tuning:
    CXXFLAGS: -O2 -march=native -mtune=native
    CFLAGS: -O2 -march=native -mtune=native
    MAKEFLAGS: -j {{ ansible_processor_vcpus }}
    CMAKE_INSTALL_PREFIX: /usr
  tasks:

  - name: Check that the /boot/cmdline.txt exists
    stat:
      path: /boot/cmdline.txt
    register: cmdline_txt

  - name: Insert boot config configuration for DRAWS / UDRC
    become: yes
    blockinfile:
      dest: /boot/config.txt
      create: yes
      block: |
        # Uncomment these if you have a DRAWS / UDRC from NW Digital Radio
        # Flush all overlays, ie. deprecated overlays loaded from eeprom
        # dtoverlay=
        # Enable UDRC/DRAWS if no EEPROM
        # dtoverlay=draws,alsaname=udrc
        # https://www.raspberrypi.org/documentation/configuration/config-txt/overclocking.md
        force_turbo=1
        # Enable audio (loads snd_bcm2835)
        # dtparam=audio=0
        # End of DRAWS / UDRC section
        #
        # Uncomment these if you are using rpitx
        # gpu_freq=250
        # force_turbo=1
        # End of rpitx section
    when: is_hampi|bool and cmdline_txt.stat.exists

  - name: Create directory hamradio
    file:
      path: /home/{{ ham_user }}/hamradio/
      state: directory

  - name: Install dependent libraries (Common)
    become: yes
    package:
      name: "{{ item }}"
      state: present
    with_items:
      - git
      - scons
      - gpsd
      - libqt5core5a
      - libqt5network5
      - libcap-dev
      - libncurses-dev
      - pps-tools
      - libusb-1.0-0-dev
      - gnuplot
      - asciidoctor
#      - libgps-dev # This isn't allowing compiles to complete yet
      - libudev-dev
      - nodejs
      - npm
      - lm-sensors
      - libasound2-dev
    retries: 5
    delay: 30
    register: result
    until: result.failed == false

  - name: Install dependent libraries (Raspberry Pi Buster)
    become: yes
    package:
      name: "{{ item }}"
      state: present
    with_items:
      - python-gi
      - python-gi-cairo
      - python-gi-dev
      - python-cairo
      - python-serial
    when: is_arm|bool and is_buster|bool
    retries: 5
    delay: 30
    register: result
    until: result.failed == false

  - name: Install dependent libraries (Raspberry Pi Bullseye)
    become: yes
    package:
      name: "{{ item }}"
      state: present
    with_items:
      - python3-gi
      - python3-gi-cairo
      - python3-cairo
      - python3-serial
      - python3-matplotlib
    when: is_arm|bool and is_bullseye|bool
    retries: 5
    delay: 30
    register: result
    until: result.failed == false

  - name: Install dependent libraries (Xubuntu)
    become: yes
    package:
      name: "{{ item }}"
      state: present
    with_items:
      - python-gi
      - python-gi-cairo
      - python-gi-dev
      - python-cairo
      - python3-serial
    when: is_hampc|bool and not is_impish|bool and not is_jammy|bool
    retries: 5
    delay: 30
    register: result
    until: result.failed == false

  - name: Insert sensors configuration for DRAWS / UDRC
    become: yes
    blockinfile:
      dest: /etc/sensors.d/draws
      create: yes
      block: |
        # This is for the DRAWS / UDRC from NW Digital Radio

        chip "ads1015-*"
                label in3 "User ADC Differential"
                label in4 "+12V"
                label in6 "User ADC 1"
                label in7 "User ADC 2"
                compute in4 ((48.7/10)+1)*@, @/((48.7/10)+1)

        # End of DRAWS / UDRC section
    when: is_hampi|bool

#
# Install DRAWS compatible version of GPSd
#
  - name: Git clone latest GPSd sources
    git:
      repo: https://gitlab.com/gpsd/gpsd.git
      dest: /home/{{ ham_user }}/hamradio/gpsd
    retries: 5
    delay: 30
    register: result
    until: result.failed == false

    # They broke the cardinal rule of commits: don't break main
  - name: gpsd commit broke the build
    command: git checkout 87becbce4491b4dd9daecc511377c228f364b0bb
    args:
      chdir: /home/{{ ham_user }}/hamradio/gpsd

  - name: Build GPSd sources
    shell: scons prefix=/usr
    args:
      chdir: /home/{{ ham_user }}/hamradio/gpsd

  - name: Install GPSd
    become: yes
    shell: scons install
    args:
      chdir: /home/{{ ham_user }}/hamradio/gpsd

  - name: Remove GPSd build directory
    file:
      path: /home/{{ ham_user }}/hamradio/gpsd
      state: absent

  - name: Fix a troublesome gpsd config entry
    become: yes
    lineinfile:
      path: /etc/default/gpsd
      regexp: '^USBAUTO=\"true\"'
      line: USBAUTO="false"

  - name: Add DRAWS port to gpsd config
    become: yes
    lineinfile:
      path: /etc/default/gpsd
      regexp: '^DEVICES=\"\"'
      line: DEVICES="/dev/ttySC0 /dev/pps0"
    when: is_hampi|bool

  - name: Add DRAWS gps option to gpsd config
    become: yes
    lineinfile:
      path: /etc/default/gpsd
      regexp: '^GPSD_OPTIONS=\"\"'
      line: GPSD_OPTIONS="-n"
    when: is_hampi|bool

#
# Install DRAWS compatible version of Direwolf
#
  - name: Git clone latest Direwolf sources
    git:
      repo: https://www.github.com/wb2osz/direwolf
      dest: /home/{{ ham_user }}/hamradio/direwolf
    retries: 5
    delay: 30
    register: result
    until: result.failed == false

  - name: Checkout Dev Direwolf sources
    shell: git checkout dev
    args:
      chdir: /home/{{ ham_user }}/hamradio/direwolf

#  - name: Fix check for DRAWS support
#    lineinfile:
#      path: /home/{{ ham_user }}/hamradio/direwolf/src/dwgpsd.c
#      regexp: '^#if GPSD_API_MAJOR_VERSION \< 5 \|\| GPSD_API_MAJOR_VERSION \> 12'
#      line: '#if GPSD_API_MAJOR_VERSION < 5 || GPSD_API_MAJOR_VERSION > 13'

  - name: Create directory direwolf/build
    file:
      path: /home/{{ ham_user }}/hamradio/direwolf/build
      state: directory

  - name: Build Dev Direwolf CMakeFiles
    command: cmake --install-prefix=/usr ..
    args:
      chdir: /home/{{ ham_user }}/hamradio/direwolf/build

  - name: Build Dev Direwolf
    command: make
    args:
      chdir: /home/{{ ham_user }}/hamradio/direwolf/build

  - name: Install Dev Direwolf
    become: yes
    command: make install
    args:
      chdir: /home/{{ ham_user }}/hamradio/direwolf/build

  - name: Install-conf Dev Direwolf
    become: yes
    command: make install-conf
    args:
      chdir: /home/{{ ham_user }}/hamradio/direwolf/build

  - name: Modify categories for direwolf.desktop
    become: yes
    lineinfile:
      path: /usr/share/applications/direwolf.desktop
      regexp: '^Categories=.*'
      line: Categories=HamRadio APRS

  - name: Remove Dev Direwolf build directory
    file:
      path: /home/{{ ham_user }}/hamradio/direwolf
      state: absent

#
# Install DRAWS Manager
#
  - name: Download Node Version Manager
    become: yes
    shell: wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash
    when: is_hampi|bool and is_bookworm|bool
    retries: 5
    delay: 30
    register: result
    until: result.failed == false

  - name: Install NVM 18
    become: yes
    shell: nvm install 18
    when: is_hampi|bool and is_bookworm|bool
    retries: 5
    delay: 30
    register: result
    until: result.failed == false

  - name: Update npm
    become: yes
    shell: npm install -g npm
    when: is_hampi|bool
    retries: 5
    delay: 30
    register: result
    until: result.failed == false

  - name: Git clone latest DRAWS Manager sources
    git:
      repo: https://github.com/nwdigitalradio/draws-manager.git
      dest: /home/{{ ham_user }}/hamradio/draws-manager
    when: is_hampi|bool
    retries: 5
    delay: 30
    register: result
    until: result.failed == false

  - name: Install DRAWS Manager service file
    become: yes
    shell: cp draws-manager.service /lib/systemd/system
    args:
      chdir: /home/{{ ham_user }}/hamradio/draws-manager
    when: is_hampi|bool

  - name: Install DRAWS Manager config file
    become: yes
    shell: cp draws-manager /etc/default
    args:
      chdir: /home/{{ ham_user }}/hamradio/draws-manager
    when: is_hampi|bool

  - name: Install DRAWS-Manager webapp
    become: yes
    shell: /usr/bin/npm install
    args:
      chdir: /home/{{ ham_user }}/hamradio/draws-manager/webapp
    when: is_hampi|bool
    retries: 5
    delay: 30
    register: result
    until: result.failed == false

  - name: Add Northwest Digital Documentation to Desktop
    copy:
      src: "{{ playbook_dir }}/../files/home/{{ ham_user }}/Desktop/Activating your DRAWS™ HAT.pdf"
      dest: "/home/{{ ham_user }}/Desktop/Activating your DRAWS™ HAT.pdf"
    when: is_hampi|bool
